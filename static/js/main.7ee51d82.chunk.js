(this["webpackJsonpwebaudio-csound-samples-example"]=this["webpackJsonpwebaudio-csound-samples-example"]||[]).push([[0],{27:function(n,e,t){},29:function(n,e,t){},32:function(n,e,t){"use strict";t.r(e);var a=t(2),s=t(6),i=t.n(s),r=t(19),o=t.n(r),l=(t(27),t(0)),h=t.n(l),d=t(3),u=t(1),c=(t(29),t(20));function p(n,e,t){return m.apply(this,arguments)}function m(){return(m=Object(u.a)(h.a.mark((function n(e,t,a){var s,i,r,o,l,d,u;return h.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:s=0;case 1:if(!(s<t.length)){n.next=16;break}return i=t[s],r="".concat(".","/").concat(i),n.next=6,fetch(r);case 6:return o=n.sent,l=i.substring(i.lastIndexOf("/")+1),d="".concat(l),n.next=11,o.arrayBuffer();case 11:u=n.sent,e.fs.writeFileSync(d,new Uint8Array(u));case 13:s++,n.next=1;break;case 16:return n.abrupt("return",!0);case 17:case"end":return n.stop()}}),n)})))).apply(this,arguments)}var g=function(){var n=Object(s.useState)(null),e=Object(d.a)(n,2),t=e[0],i=e[1],r=Object(s.useState)(!1),o=Object(d.a)(r,2),l=o[0],m=o[1];Object(s.useEffect)((function(){null==t&&Object(c.a)().then((function(n){i(n)}))}),[t]);var g=function(){var n=Object(u.a)(h.a.mark((function n(){var e;return h.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,t.setOption("-+msg_color=false");case 2:return e=["SynthStrings1-WAV-20160913/SynthStrings1-30.wav","SynthStrings1-WAV-20160913/SynthStrings1-36.wav","SynthStrings1-WAV-20160913/SynthStrings1-42.wav","SynthStrings1-WAV-20160913/SynthStrings1-48.wav","SynthStrings1-WAV-20160913/SynthStrings1-54.wav","SynthStrings1-WAV-20160913/SynthStrings1-60.wav","SynthStrings1-WAV-20160913/SynthStrings1-66.wav","SynthStrings1-WAV-20160913/SynthStrings1-72.wav","SynthStrings1-WAV-20160913/SynthStrings1-78.wav","SynthStrings1-WAV-20160913/SynthStrings1-84.wav","SynthStrings1-WAV-20160913/SynthStrings1-90.wav","SynthStrings1-WAV-20160913/SynthStrings1-96.wav"],n.next=5,p(t,e,"SynthStrings1-WAV-20160913");case 5:t.compileCsdText('Author: Steven Yi\n\nExample of a multi-sample sampler instrument. This example loads in sound files into f-tables \nwith numbers 1-12.  (These are loaded in the score.)  Loop point data, taken from the sample set\'s \nreadme.txt, are stored here in a global i-type array. fillarray is used to create the array with \nfilled in values. \n\nThe sample set had samples labelled with MIDI note numbers (i.e., 60 is middle-c on the piano keyboard). \nThe sample set recorded samples every 6 MIDI note numbers, and each note number maps to a scale degree. \nWith 12 being an octave, you can see that the sample set has two samples recorded per octave. \n\nFor this example, lposcil is used to play the f-table and loops at the given start and end loop points. \nThe SamplePlayer instrument takes in a MIDI note number to play (p4) and an amplitude in decibels (p5). \nThe MIDI note number is then used to figure out what f-table to play and used to lookup the start and \nend loop points from the giloop_points[] array.  \n\nNote: Any text, like the above, will be ignore by Csound when it is placed\noutside of the CsoundSynthesizer tags.\n\n\n<CsoundSynthesizer>\n<CsOptions>\n</CsOptions>\n<CsInstruments>\n\nsr = 44100\nksmps = 64 \n0dbfs = 1\nnchnls = 2\n\n;; Mixing signals\nga1 init 0\nga2 init 0\n\n\n;; The following array of i-vals contains the start and end looping points given in the\n;; SynthStrings1-WAV-20160913/readme.txt. \n;; This variable starts with a g- to denote it is a global value, the second letter i denotes\n;; it is of i-type, and the [] at the end denotes it is an array. \ngiloop_points[] = fillarray(304, 620744, 239, 218136, 147, 387489, 118, 218916,\n                           75, 216802, 35, 354941, 20, 250855, 40, 177603, \n                           20, 125022, 22, 75130, 46, 182387, 30, 125918)\n\n;; Looping Table player\n;; Load in an f-table with GEN01 and specify which channel to load to \n;; ensure the generated table is mono\ninstr SamplePlayer\n  ifreq = cpsmidinn(p4)\n  iamp = ampdbfs(p5)\n  itab_index = int((p4 - 30)  / 6)\n  itable = itab_index + 1  ;; calculate the f-table number\n  ibase_freq = cpsmidinn( p4 - (p4 % 6) )  ;; calculate the base frequency for the audio file \n                                           ;; the name of the file has a MIDI note number\n  iloop_start_sample = giloop_points[itab_index * 2] \n  iloop_end_sample = giloop_points[itab_index * 2 + 1]\n\n  ipan = 0.5  ;; hardcode to center\n\n  ispeed = ifreq / ibase_freq\n\n  ;; https://csound.com/docs/manual/lposcil.html\n  asig = lposcil:a(iamp, ispeed, iloop_start_sample, iloop_end_sample, itable)\n\n  asig *= linsegr(0, 0.01, 1, 2, 0)\n\n  ;; Pan the signal between left and right channel\n  ;; pan2 uses range of 0 (hard left) to 1 (hard right)\n  ;; must use the older style syntax as it has more than one output signals\n  aleft, aright pan2 asig, limit:i(ipan, 0, 1)\n   \n;  out(aleft, aright)\n  ga1 += aleft\n  ga2 += aright\n\nendin\n\n;; Score generating instrument. \n;; starts at a given MIDI note number (p4)\n;; and plays for x number of notes (p5) \n;; at a given decibel for amplitude (p6).\n;; p3 is used by this instrument as part of its calculations for start times for generated notes.\ninstr NoteRun\n  inote_dur = p3\n  istart_midi_note_num = p4 \n  idur = random:i(0.8, 2)\n  inum_notes = int(random:i(5, 10)) \n  idecibels = -18 \n\n  indx = 0\n  istart = 0\n  while (indx < inum_notes) do\n    indur = int(random:i(4, 16)) / 4 * idur\n    schedule("SamplePlayer", istart, indur * 0.99, istart_midi_note_num + int(random:i(0, 5)) * 2, idecibels)\n    istart += indur\n    indx +=1\n  od\n\n  schedule(p1, istart + random:i(2, 5), 0, istart_midi_note_num)\nendin\n\nschedule("NoteRun", 0, 0, 60)\nschedule("NoteRun", 4, 0, 72)\nschedule("NoteRun", 7, 0, 36)\n\ninstr Mixer \n  \n  ;; REVERB SEND MIXING\n  a1, a2 reverbsc ga1, ga2, 0.80, 10000\n  \n  a1 = ntrpol(a1, ga1, 0.8)\n  a2 = ntrpol(a2, ga2, 0.8)  \n  \n  out(a1, a2)\n  ga1 = 0\n  ga2 = 0\nendin \n\nschedule("Mixer", 0, -1)\n\n</CsInstruments>\n<CsScore>\n;; Use GEN01 to load file\n;; https://csound.com/docs/manual/GEN01.html\n;; The below are "f-statements" for loading function tables. \n;; p1 - the table number to assign to\n;; p2 - start time of when to load the file\n;; p3 - size of table, 0 denotes deferred table size, so have the GEN routine \n;; calculate it for you \n;; p4 - use GEN01\n;; rest of arguments: specific to GEN01, see documentation above\n\n;; These samples are from the Freepats project\n;; http://freepats.zenvoid.org/Synthesizer/synth-strings.html\nf 1 0 0 1  "SynthStrings1-30.wav" 0 0 1\nf 2 0 0 1  "SynthStrings1-36.wav" 0 0 1\nf 3 0 0 1  "SynthStrings1-42.wav" 0 0 1\nf 4 0 0 1  "SynthStrings1-48.wav" 0 0 1\nf 5 0 0 1  "SynthStrings1-54.wav" 0 0 1\nf 6 0 0 1  "SynthStrings1-60.wav" 0 0 1\nf 7 0 0 1  "SynthStrings1-66.wav" 0 0 1\nf 8 0 0 1  "SynthStrings1-72.wav" 0 0 1\nf 9 0 0 1  "SynthStrings1-78.wav" 0 0 1\nf 10 0 0 1 "SynthStrings1-84.wav" 0 0 1\nf 11 0 0 1 "SynthStrings1-90.wav" 0 0 1\nf 12 0 0 1 "SynthStrings1-96.wav" 0 0 1\n\nf0 36000\n\n</CsScore>\n</CsoundSynthesizer>\n'),t.start(),t.getAudioContext().then((function(n){return n.resume()})),m(!0);case 9:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}();return Object(a.jsx)("div",{className:"App",children:Object(a.jsxs)("header",{className:"App-header",children:[Object(a.jsx)("h1",{children:"Webaudio Csound Samples Example"}),Object(a.jsxs)("div",{style:{width:"720px"},children:[Object(a.jsxs)("p",{children:['Example that loads audio samples from server and runs with Webaudio Csound. Uses "Synth Strings #1" sample files from ',Object(a.jsx)("a",{href:"http://freepats.zenvoid.org/Synthesizer/synth-strings.html",children:"FreePats"}),". View source on ",Object(a.jsx)("a",{href:"https://github.com/kunstmusik/webaudio-csound-samples-example",children:"Github"}),"."]}),t?l?Object(a.jsx)("div",{children:"Running..."}):Object(a.jsx)("button",{onClick:g,children:"Start Project"}):Object(a.jsx)("div",{children:"Loading..."})]})]})})},f=function(n){n&&n instanceof Function&&t.e(3).then(t.bind(null,33)).then((function(e){var t=e.getCLS,a=e.getFID,s=e.getFCP,i=e.getLCP,r=e.getTTFB;t(n),a(n),s(n),i(n),r(n)}))};o.a.render(Object(a.jsx)(i.a.StrictMode,{children:Object(a.jsx)(g,{})}),document.getElementById("root")),f()}},[[32,1,2]]]);
//# sourceMappingURL=main.7ee51d82.chunk.js.map